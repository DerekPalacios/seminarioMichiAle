// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TiendaArtesaniasMarielos.Pages.Ventas
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using TiendaArtesaniasMarielos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using TiendaArtesaniasMarielos.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using TiendaArtesaniasMarielos.Pages.Modals;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using TiendaArtesaniasMarielos.Data.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using TiendaArtesaniasMarielos.Data.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using TiendaArtesaniasMarielos.Data.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Sotsera.Blazor.Toaster;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using BlazorStrap;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/facturas/{IdFactura:int}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/facturas/add")]
    public partial class VentasComponente : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 224 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\Pages\Ventas\VentasComponente.razor"
       

    [Parameter]
    public int? IdFactura { get; set; }

    public VentaModel Model { get; set; }
    public ItemFacturaModel ItemFactura { get; set; } = new ItemFacturaModel();

    int cantidadAnterior;
    private bool buttonBand = false;

    protected void cargarItemFactura(ItemFacturaModel articulo)
    {
        ItemFactura = articulo;
        buttonBand = false;

    }


    private void editItem(ItemFacturaModel itemEdit)
    {
        ItemFactura = itemEdit;
        ItemFactura.Stock = productoService.Articulo(itemEdit.IdArticulo).Stock;
        cantidadAnterior = ItemFactura.Cantidad;
        buttonBand = true;
    }

    private void ActualizarItemcancel()
    {
        buttonBand = false;
        ItemFactura.Cantidad = cantidadAnterior;
        ItemFactura = new ItemFacturaModel();

    }


    //variable que guarda una lista de los items de la factura antes de que sean modificados
    private List<ItemFacturaModel> listaAnteriorModificacion { get; set; } = new List<ItemFacturaModel>();
    private List<ItemFacturaModel> listaItemsNueva { get; set; } = new List<ItemFacturaModel>();

    public List<ClienteModel> ListaClientes { get; set; }



    protected override void OnInitialized()
    {
        CargarFactura();

        ListaClientes = clientesService.ListaClientes();

    }

    protected void CargarFactura()
    {
        if (IdFactura == null)
        {
            Model = new VentaModel()
                {
                    Id = -1,
                    Fecha = DateTime.Now,
                };
            ItemFactura.IdVenta = -1;
        }
        else
        {
            Model = facturaService.Factura(Convert.ToInt32(IdFactura));
            listaAnteriorModificacion = facturaService.Factura(Convert.ToInt32(IdFactura)).Items;
            ItemFactura.IdVenta = Convert.ToInt32(IdFactura);
        }
    }

    protected MsgResult CrearFactura()
    {
        return facturaService.Crear(Model);
    }

    protected void GuardarFactura()
    {
        var res = new MsgResult();

        if (Model.Id == -1)
        {
            res = CrearFactura();

            if (res.IsSuccess)
            {
                Model.Id = res.Code;
                ItemFactura.IdVenta = res.Code;
            }
        }
        else
        {
            res = ModificarFactura();
        }

        if (res.IsSuccess)
        {
            toaster.Success(res.Message, "OK");
            listaAnteriorModificacion = facturaService.Factura(Convert.ToInt32(IdFactura)).Items;

        }
        else
        {
            toaster.Error(res.Message, "Error");
        }
    }

    protected MsgResult ModificarFactura()
    {
        //envio extra de una lista de items que el modelo tenia antes de que se modificara en la vista
        listaItemsNueva.ForEach(itemNuevo => Model.Items.Add(itemNuevo));
        listaItemsNueva = new List<ItemFacturaModel>();
        return facturaService.Modificar(Model, listaAnteriorModificacion);

    }

    protected void BuscarProducto(ChangeEventArgs e)
    {
        if (string.IsNullOrEmpty(e.Value.ToString()))
        {
            return;
        }

        var producto = productoService.Articulo(e.Value.ToString());
        if (producto == null)
        {
            toaster.Info("Producto no encontrado", "Info");
            return;
        }

        ItemFactura = new ItemFacturaModel
            {
                Id = producto.Id,
                //asignacion del id al item producto

                Cantidad = 1,
                Costo = producto.Costo,
                IdVenta = Model.Id,
                IdArticulo = producto.Id,
                NombreArticulo = producto.Nombre,
                Precio = producto.Precio,
                Codigo = producto.Codigo,
                Stock = producto.Stock,
            };
        buttonBand = false;
    }


    //agrega item a la lista de items del modelo y por ello a la grid
    protected void AgregarItemFactura()
    {
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 378 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\Pages\Ventas\VentasComponente.razor"
          
        if (!buttonBand)
        {
            if (listaItemsNueva.FirstOrDefault(x => x.Id == ItemFactura.Id) == null && Model.Items.FirstOrDefault(x => x.IdArticulo == ItemFactura.Id) == null)
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 385 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\Pages\Ventas\VentasComponente.razor"
                  
                listaItemsNueva.Add(ItemFactura);
                ItemFactura = new ItemFacturaModel();

            }
            else
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 395 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\Pages\Ventas\VentasComponente.razor"
                  
            }

        }
        else
        {
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 403 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\Pages\Ventas\VentasComponente.razor"
              
            Model.Items.FirstOrDefault(x => x.IdArticulo == ItemFactura.IdArticulo).Cantidad = ItemFactura.Cantidad;

            ItemFactura = new ItemFacturaModel();
            buttonBand = false;
        }
    }


    protected async Task EliminarProducto(ItemFacturaModel item)
    {



        var confirm = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "¿Confirma que desea eliminar este Artículo de la Factura?",
                Text = "Si lo elimina, no podrá recuperarlo",
                ShowConfirmButton = true,
                ConfirmButtonText = "Si, eliminar",
                ShowCancelButton = true,
                CancelButtonText = "No, eliminar"
            });

        if (!confirm.IsConfirmed)
        {
            
            return;
        }

        

#line default
#line hidden
#nullable disable
#nullable restore
#line 439 "C:\Users\derek\OneDrive\Documentos\Seminario Aletas Michi 2021\AA\Pages\Ventas\VentasComponente.razor"
          
        if (buttonBand)
            {
                if (item.IdArticulo == ItemFactura.IdArticulo)
                {
                    ItemFactura = new ItemFacturaModel();
                    buttonBand = false;
                }
            }
        listaItemsNueva.Remove(item);



        //var res = facturaService.EliminarProducto(item);
        //if (res.IsSuccess)
        //{
        //    toaster.Success(res.Message, "OK");

        //}
        //else
        //{
        //    toaster.Error(res.Message, "OK");
        //}
    }


    public ClienteModel Cliente { get; set; } = new ClienteModel();



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SweetAlertService swal { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToaster toaster { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ArticuloService productoService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ClienteService clientesService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private VentaService facturaService { get; set; }
    }
}
#pragma warning restore 1591
